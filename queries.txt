-- COS 221 PRAC 5 GROUP 14 --
- This file is for all the database queries and every change is recorded.
- Changes are denoted by "//", followed by the date and author.

==========================================================================

// Created 2024/05/13 7:50PM by @PawnParser

==========================================================================

//Creation of table cast
CREATE TABLE `cast` (`cast_id` INT NOT NULL AUTO_INCREMENT , `lead_actor` TEXT NOT NULL , `secondary_actor` TEXT NOT NULL , `director` TEXT NOT NULL , `backstage` TEXT NOT NULL , `movie_id` INT NULL , `tv_id` INT NULL , PRIMARY KEY (`cast_id`));

//Adding foreign keys for movie_id and tvshow_id
ALTER TABLE cast
ADD CONSTRAINT movies_FK
FOREIGN KEY (movie_id)
REFERENCES movies(movie_id)

ALTER TABLE cast 
ADD CONSTRAINT shows_FK 
FOREIGN KEY (tv_id) 
REFERENCES tvshows(tvshow_id);

//Populating table cast
INSERT INTO `cast` (`cast_id`, `lead_actor`, `secondary_actor`, `director`, `backstage`, `movie_id`, `tv_id`) VALUES 
(NULL, 'Jack Nicholson', 'Marlon Brando', 'Steven Spielberg', 'Kerry Barden', 1, NULL), 
(NULL, 'Robert De Niro', 'Al Pacino', 'Christopher Nolan', 'Victoria Burrows', NULL, 1),
(NULL, 'Daniel Day-Lewis', 'Dustin Hoffman', 'James Cameron', 'Scot Boland', 2, NULL), 
(NULL, 'Tom Hanks', 'Anthony Hopkins', 'Martin Scorsese', 'Ellen Chenoweth', NULL, 2), 
(NULL, 'Paul Newman', 'Denzel Washington', 'Alfred Hitchcock', 'Sarah Finn', 3, NULL), 
(NULL, 'Spencer Tracy', 'Laurence Olivier', 'Stanley Kubrick', 'Randi Hiller', NULL, 3), 
(NULL, 'Jack Lemmon', '14. Michael Caine', 'Francis Ford Coppola', 'Kimberly Hope', 4, NULL),
(NULL, 'James Stewart', 'Sean Penn', 'Woody Allen', 'Allison Jones', NULL, 4), 
(NULL, 'Robin Williams', 'Robert Duvall', 'Billy Wilder', 'Ellen Lewis', 5, NULL), 
(NULL, 'Morgan Freeman', 'Jeff Bridges', 'Zack Snyder', 'Junie Lowry-Johnson', NULL, 5)

// Modfiied 2024/05/14 1:52PM by @MilanKru

==========================================================================

//Creation of table Movies

CREATE TABLE IF NOT EXISTS `Movies` (
  `movie_id` INT NOT NULL AUTO_INCREMENT,
  `Rating` INT GENERATED ALWAYS AS () VIRTUAL COMMENT 'Calculated using \"Reviews\" table',
  `ReleaseDate` DATE NOT NULL,
  `Summary` LONGTEXT NOT NULL,
  `Length` INT NOT NULL COMMENT 'Gives length of the movie in minutes',
  `AgeRating` VARCHAR(10) NULL COMMENT 'Age restriction rating of movie',
  `Title` VARCHAR(85) NOT NULL,
  `Genre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`movie_id`))
ENGINE = InnoDB;

//Population of table movies

INSERT INTO `mydb`.`Movies` (`movieID`, `Rating`, `Cast`, `ReleaseDate`, `Summary`, `Length`, `AgeRating`, `Title`, `Genre`) VALUES (1, NULL, NULL, '29 April 2022', 'An assassin-for-hire finds that he\'s become a target after he refuses to complete a job for a dangerous criminal organization.', 114, '18', 'Memory', 'Action');
INSERT INTO `mydb`.`Movies` (`movieID`, `Rating`, `Cast`, `ReleaseDate`, `Summary`, `Length`, `AgeRating`, `Title`, `Genre`) VALUES (2, NULL, NULL, '14 April 2008', 'After being held captive in an Afghan cave, billionaire engineer Tony Stark creates a unique weaponized suit of armor to fight evil.', 126, '12', 'Iron Man', 'Action');
INSERT INTO `mydb`.`Movies` (`movieID`, `Rating`, `Cast`, `ReleaseDate`, `Summary`, `Length`, `AgeRating`, `Title`, `Genre`) VALUES (3, NULL, NULL, '22 April 2001', 'A mean lord exiles fairytale creatures to the swamp of a grumpy ogre, who must go on a quest and rescue a princess for the lord in order to get his land back.', 90, '8', 'Shrek', 'Comedy');
INSERT INTO `mydb`.`Movies` (`movieID`, `Rating`, `Cast`, `ReleaseDate`, `Summary`, `Length`, `AgeRating`, `Title`, `Genre`) VALUES (4, NULL, NULL, '15 December 1995', 'When two kids find and play a magical board game, they release a man trapped in it for decades - and a host of dangers that can only be stopped by finishing the game.', 104, '13', 'Jumanji', 'Comedy');
INSERT INTO `mydb`.`Movies` (`movieID`, `Rating`, `Cast`, `ReleaseDate`, `Summary`, `Length`, `AgeRating`, `Title`, `Genre`) VALUES (5, NULL, NULL, '19 February 2014', 'A slave-turned-gladiator finds himself in a race against time to save his true love, who has been betrothed to a corrupt Roman Senator. As Mount Vesuvius erupts, he must fight to save his beloved as Pompeii crumbles around him.', 105, '12', 'Pompeii', 'Romance');
INSERT INTO `mydb`.`Movies` (`movieID`, `Rating`, `Cast`, `ReleaseDate`, `Summary`, `Length`, `AgeRating`, `Title`, `Genre`) VALUES (6, NULL, NULL, '23 March 1990', 'A man in a legal but hurtful business needs an escort for some social events, and hires a beautiful prostitute he meets... only to fall in love.', 119, '15', 'Pretty Woman', 'Romance');
INSERT INTO `mydb`.`Movies` (`movieID`, `Rating`, `Cast`, `ReleaseDate`, `Summary`, `Length`, `AgeRating`, `Title`, `Genre`) VALUES (7, NULL, NULL, '17 November 2008', 'When Bella Swan moves to a small town in the Pacific Northwest, she falls in love with Edward Cullen, a mysterious classmate who reveals himself to be a 108-year-old vampire.', 122, '12', 'Twilight', 'Fantasy');
INSERT INTO `mydb`.`Movies` (`movieID`, `Rating`, `Cast`, `ReleaseDate`, `Summary`, `Length`, `AgeRating`, `Title`, `Genre`) VALUES (8, NULL, NULL, '25 May 2016', 'As an Orc horde invades the planet Azeroth using a magic portal, a few human heroes and dissenting Orcs must attempt to stop the true evil behind this war.', 123, '12', 'Warcraft', 'Fantasy');
INSERT INTO `mydb`.`Movies` (`movieID`, `Rating`, `Cast`, `ReleaseDate`, `Summary`, `Length`, `AgeRating`, `Title`, `Genre`) VALUES (9, NULL, NULL, '29 September 2014', 'With his wife\'s disappearance having become the focus of an intense media circus, a man sees the spotlight turned on him when it\'s suspected that he may not be innocent.', 149, '18', 'Gone Girl', 'Thriller');
INSERT INTO `mydb`.`Movies` (`movieID`, `Rating`, `Cast`, `ReleaseDate`, `Summary`, `Length`, `AgeRating`, `Title`, `Genre`) VALUES (10, NULL, NULL, '21 November 2016', 'In 1942, a Canadian intelligence officer in North Africa encounters a female French Resistance fighter on a deadly mission behind enemy lines. When they reunite in London, their relationship is tested by the pressures of war.', 124, '15', 'Allied', 'Thriller');

// Modfiied 2024/05/14 17:56PM by @OPhelia2024

==========================================================================
CREATE TABLE watchlist (
    watchlistID INT AUTO_INCREMENT PRIMARY KEY,
    userID INT,
    movie_id INT,
    tvshow_ID INT,
    FOREIGN KEY (userID) REFERENCES users(userID),
    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id),
    FOREIGN KEY (tvshow_id) REFERENCES tvshows(tvshow_id)
);
INSERT INTO watchlist (userID, movie_id, tvshow_ID) VALUES
(1, 1, 1),
(1, 2, 2),
(2, 3, 3),
(2, 4, 4),
(3, 5, 5),
(3, 1, 2),
(4, 2, 3),
(4, 3, 4),
(5, 4, 5),
(5, 5, 1);

// Modified 2024/05/14 18:37 by @zaps123

==========================================================================

// Creation of TVShows table

CREATE TABLE TVShows (
    TVshowID INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255),
    seasons INT,
    releaseDate DATE,
    ageRating VARCHAR(10),
    summary TEXT,
    genre VARCHAR(100),
    castID INT,
    reviewID INT,
    FOREIGN KEY (castID) REFERENCES CastAndCrew(castAndCrewID),
    FOREIGN KEY (reviewID) REFERENCES Reviews(reviewID)
);

// Insertion of data into TVShows table

INSERT INTO TVShows (title, seasons, releaseDate, ageRating, summary, genre, castID, reviewID) VALUES
('Breaking Bad', 5, '2008-01-20', '18+', 'A high school chemistry teacher turned methamphetamine manufacturer teams up with a former student to create and sell methamphetamine.', 'Drama', 1, 1),
('Game of Thrones', 8, '2011-04-17', '18+', 'Seven noble families fight for control of the mythical land of Westeros.', 'Fantasy', 2, 2),
('Stranger Things', 3, '2016-07-15', '13+', 'When a young boy disappears, his mother, a police chief, and his friends must confront terrifying supernatural forces to get him back.', 'Science Fiction', 3, 3),
('The Office', 9, '2005-03-24', '16+', 'A mockumentary on a group of typical office workers, where the workday consists of ego clashes, inappropriate behavior, and tedium.', 'Comedy', 4, 4),
('Friends', 10, '1994-09-22', '13+', 'Follows the personal and professional lives of six twenty to thirty-something-year-old friends living in Manhattan.', 'Comedy', 5, 5),
('Breaking Bad', 5, '2008-01-20', '18+', 'A high school chemistry teacher turned methamphetamine manufacturer teams up with a former student to create and sell methamphetamine.', 'Drama', 6, 6),
('The Crown', 4, '2016-11-04', '16+', 'Follows the political rivalries and romance of Queen Elizabeth II.', 'Drama', 7, 7),
('Sherlock', 4, '2010-07-25', '16+', 'A modern update finds the famous sleuth and his doctor partner solving crime in 21st century London.', 'Mystery', 8, 8),
('Stranger Things', 3, '2016-07-15', '13+', 'When a young boy disappears, his mother, a police chief, and his friends must confront terrifying supernatural forces to get him back.', 'Science Fiction', 9, 9),
('Friends', 10, '1994-09-22', '13+', 'Follows the personal and professional lives of six twenty to thirty-something-year-old friends living in Manhattan.', 'Comedy', 10, 10);

// Modified 2024/05/15 at 10:02 AM by @PawnParser

===========================================================================


// Creation of Users table

CREATE TABLE Users (
    userID INT NOT NULL AUTO_INCREMENT,
    username VARCHAR(30),
    password VARCHAR(30),
    watchlistID INT,
    premium BOOLEAN,
    PRIMARY KEY (userID),
    FOREIGN KEY (watchlistID) REFERENCES Watchlists(watchlistID)
);


// Population of Users table

INSERT INTO Users (userID, username, password, watchlistID, premium)
VALUES 
    (1, 'user1', 'password1', 1, true),
    (2, 'user2', 'password2', 2, false),
    (3, 'user3', 'password3', 3, true),
    (4, 'user4', 'password4', 4, false),
    (5, 'user5', 'password5', 5, true),
    (6, 'user6', 'password6', 6, false),
    (7, 'user7', 'password7', 7, true),
    (8, 'user8', 'password8', 8, false),
    (9, 'user9', 'password9', 9, true),
    (10, 'user10', 'password10', 10, false);


----------------------------------------------------

//creation of Reviews table

CREATE TABLE Reviews (
    reviewID INT NOT NULL AUTO_INCREMENT,
    rating INT,
    summary TEXT,
    movieID INT,
    TVshowID INT,
    PRIMARY KEY (reviewID),
    FOREIGN KEY (movieID) REFERENCES Movies(movieID),
    FOREIGN KEY (TVshowID) REFERENCES TVshows(TVshowID)
);



// Population of Reviews table

INSERT INTO Reviews (reviewID, rating, summary, movieID, TVshowID)
VALUES 
    (1, 5, 'Fantastic movie with great performances.', 1, NULL),
    (2, 4, 'Enjoyed it, but felt it could be better.', 2, NULL),
    (3, 5, 'A must-watch for all sci-fi fans!', 3, NULL),
    (4, 3, 'Interesting storyline, but pacing was slow.', 4, NULL),
    (5, 5, 'Absolutely loved it! Highly recommended.', NULL, 1),
    (6, 4, 'Entertaining series, can''t wait for the next season.', NULL, 2),
    (7, 2, 'Disappointing movie, not worth the hype.', 5, NULL),
    (8, 5, 'Incredible performance by the lead actor.', 6, NULL),
    (9, 4, 'A gripping thriller from start to finish.', NULL, 3),
    (10, 3, 'Decent show, but lacked depth in characters.', NULL, 4);




